{
  "name": "NextCloud Docker Dev Workspace (olwimo)",
  "dockerComposeFile": "../docker-compose.yml",
  // "overrideCommand": false,
  "shutdownAction": "stopCompose",
  "service": "nextcloud",
  "runServices": ["nextcloud", "database-mysql", "redis", "mail"],

  "workspaceFolder": "/workspace",
  "forwardPorts": ["nextcloud:80", "nextcloud:443"],

  // // // Forward Jupyter port locally, mark required
  // // "forwardPorts": [8888], // 5000, 9000
  // "portsAttributes": {
  //   "vscode:8080": {
  //     "label": "WebApp",
  //     "requireLocalPort": true,
  //     "elevateIfNeeded": true,
  //     "protocol": "http",
  //     "onAutoForward": "ignore"
  //   },
  //   "adminer:8080": {
  //     "label": "MySQL",
  //     "requireLocalPort": true,
  //     "elevateIfNeeded": true,
  //     "protocol": "http",
  //     "onAutoForward": "ignore"
  //   },
  //   "keycloak:8080": {
  //     "label": "Keycloak",
  //     "requireLocalPort": true,
  //     "elevateIfNeeded": true,
  //     "protocol": "http",
  //     "onAutoForward": "ignore"
  //   }
  // },
  // "otherPortsAttributes": {
  //   "onAutoForward": "ignore"
  // },
  "remoteEnv": {
    // "SDKMAN_DIR": "/usr/local/sdkman",
    // "JAVA_HOME": "/usr/local/sdkman/candidates/java/current",
    // "GRAALVM_HOME": "/usr/local/sdkman/candidates/java/17.0.7-graal",
    // "PATH": "/usr/local/sdkman/bin:/usr/local/sdkman/candidates/java/current/bin:/usr/local/sdkman/candidates/gradle/current/bin:/usr/local/sdkman/candidates/maven/current/bin:/usr/local/sdkman/candidates/ant/current/bin:${PATH}",
    // "NVM_DIR": "/usr/local/share/nvm",
    //     "NVM_SYMLINK_CURRENT": "true",
    //     "PATH": "/usr/local/share/nvm/current/bin:${PATH}",
    // "NODE_ENV": "development",
    // "CHOKIDAR_USEPOLLING": "true",
    "LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
  },

  // "features": {
  //   "ghcr.io/devcontainers/features/common-utils:2": {
  //     "installZsh": "true",
  //     "username": "codespace",
  //     "userUid": "1000",
  //     "userGid": "1000",
  //     "upgradePackages": "true"
  //   },
  //   "ghcr.io/devcontainers/features/node:1": {
  //     "version": "18",
  //     "nodeGypDependencies": true,
  //     "nvmInstallPath": "/usr/local/share/nvm",
  //     "nvmVersion": "0.39.2"
  //   },
  //   "ghcr.io/devcontainers/features/java:1": {
  //     "version": "17",
  //     "jdkDistro": "amzn",
  //     "installGradle": true,
  //     "gradleVersion": "7.5.1",
  //     "installMaven": true,
  //     "mavenVersion": "3.8.6",
  //     "installAnt": true,
  //     "antVersion": "1.10.12"
  //   },
  //   "ghcr.io/devcontainers/features/docker-in-docker:2": {
  //     "version": "20.10",
  //     "moby": true,
  //     "dockerDashComposeVersion": "v2",
  //     "azureDnsAutoDetection": false,
  //     "dockerDefaultAddressPool": "",
  //     "installDockerBuildx": true
  //     // },
  //     // "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
  //     //   "version": "latest",
  //     //   "moby": true,
  //     //   "dockerDashComposeVersion": "v2"
  //   }
  // },

  // Configure tool-specific properties.
  "customizations": {
    // Configure properties specific to VS Code.
    "vscode": {
      // Set *default* container specific settings.json values on container create.
      "settings": {
        "files.eol": "\n",
        "input-assist.languages": ["plaintext"]
        // "graalvm.home": "/usr/local/sdkman/candidates/java/17.0.7-graal",
        // "graalvm.installations": ["/usr/local/sdkman/candidates/java/17.0.7-graal"],
        // "java.import.gradle.java.home": "/usr/local/sdkman/candidates/java/current",
        // "java.jdt.ls.java.home": "/usr/local/sdkman/candidates/java/current",
        // "java.configuration.runtimes": [
        //   {
        //     "name": "JavaSE-17",
        //     "path": "/usr/local/sdkman/candidates/java/current",
        //     "sources": "/usr/local/sdkman/candidates/java/current/lib/src.zip",
        //     "javadoc": "/usr/local/sdkman/candidates/java/current/bin/javadoc",
        //     "default": true
        //   }
        // ],
        // "java.server.launchMode": "Hybrid",
        // "java.eclipse.downloadSources": true,
        // "java.jdt.ls.androidSupport.enabled": "off",
        // "java.compile.nullAnalysis.mode": "automatic",
        // "java.editor.reloadChangedSources": "auto"
      },

      // Add the IDs of extensions you want installed when the container is created.
      "extensions": [
        "github.vscode-github-actions",
        "dotjoshjohnson.xml",
        "davidanson.vscode-markdownlint",
        "bmewburn.vscode-intelephense-client",
        "xdebug.php-debug",
        "GitHub.vscode-pull-request-github",
        // "ms-ossdata.vscode-postgresql",
        // "ms-mssql.mssql",
        // "ms-mssql.sql-database-projects-vscode",
        "mgmcdermott.vscode-language-babel",
        // "ms-databasemigration.data-access-migration-toolkit",
        // "redhat.java",
        // "vscjava.vscode-java-pack",
        // "vscjava.vscode-java-debug",
        // "vscjava.vscode-gradle",
        // "redhat.vscode-camelk",
        // "redhat.vscode-apache-camel",
        // "redhat.apache-camel-extension-pack",
        // "vscjava.vscode-java-dependency",
        // "vscjava.vscode-spring-initializr",
        // "sonarsource.sonarlint-vscode",
        // "vmware.vscode-boot-dev-pack",
        // "asf.apache-netbeans-java",
        // "oracle-labs-graalvm.graalvm",
        // "oracle-labs-graalvm.micronaut",
        // "oracle-labs-graalvm.graalvm-pack",
        // "microprofile-community.vscode-microprofile-pack",
        // "redhat.vscode-quarkus",
        // "redhat.vscode-community-server-connector",
        "redhat.vscode-yaml",
        // "alphabotsec.vscode-eclipse-keybindings",
        // "k--kato.intellij-idea-keybindings",
        "ms-azuretools.vscode-docker",
        // "ms-kubernetes-tools.vscode-kubernetes-tools",
        // "eamodio.gitlens",
        "freebroccolo.input-assist",
        // "nwolverson.ide-purescript",
        // "dhall.dhall-lang",
        // "dhall.vscode-dhall-lsp-server",
        // "amazonwebservices.aws-toolkit-vscode",
        "mikestead.dotenv",
        // "msjsdiag.vscode-react-native",
        // "syler.sass-indented",
        // "mgmcdermott.vscode-language-babel",
        "esbenp.prettier-vscode",
        "msrvida.vscode-sanddance",
        // "james-yu.latex-workshop",
        "ms-vscode.hexeditor",
        "redhat.fabric8-analytics",
        "dbaeumer.vscode-eslint",
        "ms-vscode.makefile-tools",
        "vue.volar",
        // "vue.vscode-typescript-vue-plugin"
        // "runem.lit-plugin",
        // "bierner.lit-html",
        // "mgmcdermott.vscode-language-babel",
        // "Tobermory.es6-string-html",
        "christian-kohler.npm-intellisense"
      ]
    }
  }

  // Use 'postCreateCommand' to run commands after the container is created.
  // "postCreateCommand": "pip3 install --user -r requirements.txt",
  // "onCreateCommand": "apt update && apt install -y libmagickcore-6.q16hdri-6-extra"
  // "postStartCommand": "nohup bash -c 'jupyter notebook --ip=0.0.0.0 --port=8888 --allow-root &'",
  // "postCreateCommand": "bash -c 'export SDKMAN_DIR=/usr/local/sdkman && . /usr/local/sdkman/bin/sdkman-init.sh && sdk install quarkus' && echo 'PATH=\"${PATH}:/usr/local/sdkman/candidates/quarkus/current/bin\"' | tee -a /home/codespace/.bashrc >> /home/codespace/.bash_profile && umask 0002 && npm install -g yarn && npm cache clean --force",
  // "initializeCommand": "bash -c 'cd .devcontainer; if [ ! -f awscliv2.zip ]; then curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\"; fi; if [ ! -f .env ]; then touch .env; fi; chmod 600 .env; . .env; if [ -z \"${DB_ROOT_PASSWORD}\" ]; then echo \"DB_ROOT_PASSWORD=changeRootPass\" >> .env; fi; if [ -z \"${DB_PASSWORD}\" ]; then echo \"DB_PASSWORD=changeMe\" >> .env; fi; if [ -z \"${KEYCLOAK_ADMIN_PASSWORD}\" ]; then echo \"KEYCLOAK_ADMIN_PASSWORD=changeKeycloak\" >> .env; fi; if [ -z \"${CLT_SECRET}\" ]; then echo \"CLT_SECRET=$(dd if=/dev/urandom bs=8 count=4 | base64)\" >> .env; fi; if [ ! -f vscode.env ]; then touch vscode.env; fi; chmod 600 vscode.env; cd ../mmr-config && (rm -f *.env; ln -sf ../.devcontainer/*.env; ln -sf ../.devcontainer/.env ./secrets.env)'",

  // Set `remoteUser` to `root` to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  // "remoteUser": "codespace",
  // "containerUser": "codespace"
}
